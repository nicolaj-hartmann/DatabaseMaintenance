name: .NET Core CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 1433:1433
        env:
          SA_PASSWORD: yourStrong(!)Password
          ACCEPT_EULA: Y
        options: >-
          --health-cmd="exit 0"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Run GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.12
        id: gitversion
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml # Optional: specify your GitVersion configuration file

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run Tests
        run: dotnet test --no-build --verbosity normal

      - name: Pack NuGet Package
        run: dotnet pack --configuration Release --output ./nupkg /p:Version=${{ steps.gitversion.outputs.semVer }}

      - name: Publish NuGet Package
        run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag: v${{ steps.gitversion.outputs.semVer }}
          name: Release ${{ steps.gitversion.outputs.semVer }}
          body: |
            Release notes for version ${{ steps.gitversion.outputs.semVer }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload NuGet Package to Release
        uses: softprops/action-gh-release@v1
        with:
          tag: v${{ steps.gitversion.outputs.semVer }}
          files: ./nupkg/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
